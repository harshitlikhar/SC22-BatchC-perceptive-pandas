{"backend_state":"running","connection_file":"/projects/2c5289c5-1056-49b0-b248-277ffdbaa8bf/.local/share/jupyter/runtime/kernel-f7686baf-8df8-481c-bc20-a74d6437b76c.json","kernel":"python3-ubuntu","kernel_error":"","kernel_state":"idle","trust":true,"type":"settings"}
{"cell_type":"code","end":1658347663097,"exec_count":31,"id":"c02839","input":"happy_2021_df[happy_2021_df['happy_score'] == happy_2021_df['happy_score'].max()]","kernel":"python3-ubuntu","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Country name</th>\n      <th>Continents</th>\n      <th>happy_score</th>\n      <th>Standard error of ladder score</th>\n      <th>upperwhisker</th>\n      <th>lowerwhisker</th>\n      <th>Logged GDP per capita</th>\n      <th>Social support</th>\n      <th>Healthy life expectancy</th>\n      <th>Freedom to make life choices</th>\n      <th>...</th>\n      <th>Perceptions of corruption</th>\n      <th>Ladder score in Dystopia</th>\n      <th>Explained by: Log GDP per capita</th>\n      <th>Explained by: Social support</th>\n      <th>Explained by: Healthy life expectancy</th>\n      <th>Explained by: Freedom to make life choices</th>\n      <th>Explained by: Generosity</th>\n      <th>Explained by: Perceptions of corruption</th>\n      <th>Dystopia + residual</th>\n      <th>CODE</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Finland</td>\n      <td>Europe</td>\n      <td>7.842</td>\n      <td>0.032</td>\n      <td>7.904</td>\n      <td>7.78</td>\n      <td>10.775</td>\n      <td>0.954</td>\n      <td>72.0</td>\n      <td>0.949</td>\n      <td>...</td>\n      <td>0.186</td>\n      <td>2.43</td>\n      <td>1.446</td>\n      <td>1.106</td>\n      <td>0.741</td>\n      <td>0.691</td>\n      <td>0.124</td>\n      <td>0.481</td>\n      <td>3.253</td>\n      <td>FIN</td>\n    </tr>\n  </tbody>\n</table>\n<p>1 rows × 21 columns</p>\n</div>","text/plain":"  Country name Continents  happy_score  Standard error of ladder score  \\\n0      Finland     Europe        7.842                           0.032   \n\n   upperwhisker  lowerwhisker  Logged GDP per capita  Social support  \\\n0         7.904          7.78                 10.775           0.954   \n\n   Healthy life expectancy  Freedom to make life choices  ...  \\\n0                     72.0                         0.949  ...   \n\n   Perceptions of corruption  Ladder score in Dystopia  \\\n0                      0.186                      2.43   \n\n   Explained by: Log GDP per capita  Explained by: Social support  \\\n0                             1.446                         1.106   \n\n   Explained by: Healthy life expectancy  \\\n0                                  0.741   \n\n   Explained by: Freedom to make life choices  Explained by: Generosity  \\\n0                                       0.691                     0.124   \n\n   Explained by: Perceptions of corruption  Dystopia + residual  CODE  \n0                                    0.481                3.253   FIN  \n\n[1 rows x 21 columns]"},"exec_count":31}},"pos":26,"start":1658347663074,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"0231cf","input":"#### How does social support affect happiness\n\n","pos":29,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"027d68","input":"## Happiness Index\n\n","pos":0,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"2fda69","input":"top 10\n\n","pos":69.90625,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"31e6cd","input":"#### Which country had the min happy Index?\n","pos":27,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"365313","input":"#### Which country had the most happy Index?\n\n","pos":24,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"680868","input":"## Importing Happiness Dataset (2008-2019)","pos":57,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"7805e7","input":"##### GDP and Happy Score in 2021\n\n","pos":16,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"888c6a","input":"## Importing Population Dataframe","pos":37,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"8acb64","input":"#### Does greater population indicate a change in happiness score\n\n","pos":46,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"9088fb","input":"#### Happiness Score over the years\n\n","pos":65,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"99b93c","input":"#### Population and Corruption, happy Index\n\n","pos":48,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"9e89c7","input":"#### What continent in average has the highest/lowest happiness score","pos":20,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"e784cf","input":"#### Import the dataset\n\n","pos":2,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"e814c1","input":"#### How strongly are life expectancy and happiness correlated","pos":31,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"f1bff8","input":"#### life, popu and happy\n\n","pos":49,"state":"done","type":"cell"}
{"end":1658347659571,"exec_count":25,"id":"e02695","input":"import statsmodels","kernel":"python3-ubuntu","pos":18,"start":1658347659566,"state":"done","type":"cell"}
{"end":1658347660067,"exec_count":26,"id":"7acefe","input":"px.scatter(happy_2021_df, 'Logged GDP per capita', 'happy_score', color = 'Continents', size = 'Freedom to make life choices',hover_data=['Country name'], title = \"GDP and Happiness Score Variation by Continents\", trendline = 'ols', trendline_scope=\"overall\")","kernel":"python3-ubuntu","output":{"0":{"data":{"iframe":"98bc796b7b48f593684a116c509d43a6c2ad4381"}}},"pos":19,"start":1658347659908,"state":"done","type":"cell"}
{"end":1658347661158,"exec_count":27,"id":"f89eb2","input":"continent_avgscore = happy_2021_df.groupby('Continents')[['happy_score']].mean().reset_index()","kernel":"python3-ubuntu","pos":21,"start":1658347661139,"state":"done","type":"cell"}
{"end":1658347661571,"exec_count":28,"id":"79b94d","input":"continent_avgscore.sort_values(by=['happy_score'], ascending=False, inplace=True)","kernel":"python3-ubuntu","pos":22,"start":1658347661546,"state":"done","type":"cell"}
{"end":1658347661982,"exec_count":29,"id":"6907b5","input":"px.bar(continent_avgscore, x='Continents', y='happy_score')","kernel":"python3-ubuntu","output":{"0":{"data":{"iframe":"fa28463d277001bfdcd89e74dc5557d6f22b02a5"}}},"pos":23,"start":1658347661803,"state":"done","type":"cell"}
{"end":1658347662823,"exec_count":30,"id":"b9afea","input":"# happy_2021_df[['happy_score','Country name']].head(1)","kernel":"python3-ubuntu","pos":25,"start":1658347662821,"state":"done","type":"cell"}
{"end":1658347664033,"exec_count":32,"id":"c84696","input":"happy_2021_df[happy_2021_df['happy_score'] == happy_2021_df['happy_score'].min()]","kernel":"python3-ubuntu","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Country name</th>\n      <th>Continents</th>\n      <th>happy_score</th>\n      <th>Standard error of ladder score</th>\n      <th>upperwhisker</th>\n      <th>lowerwhisker</th>\n      <th>Logged GDP per capita</th>\n      <th>Social support</th>\n      <th>Healthy life expectancy</th>\n      <th>Freedom to make life choices</th>\n      <th>...</th>\n      <th>Perceptions of corruption</th>\n      <th>Ladder score in Dystopia</th>\n      <th>Explained by: Log GDP per capita</th>\n      <th>Explained by: Social support</th>\n      <th>Explained by: Healthy life expectancy</th>\n      <th>Explained by: Freedom to make life choices</th>\n      <th>Explained by: Generosity</th>\n      <th>Explained by: Perceptions of corruption</th>\n      <th>Dystopia + residual</th>\n      <th>CODE</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>148</th>\n      <td>Afghanistan</td>\n      <td>Asia</td>\n      <td>2.523</td>\n      <td>0.038</td>\n      <td>2.596</td>\n      <td>2.449</td>\n      <td>7.695</td>\n      <td>0.463</td>\n      <td>52.493</td>\n      <td>0.382</td>\n      <td>...</td>\n      <td>0.924</td>\n      <td>2.43</td>\n      <td>0.37</td>\n      <td>0.0</td>\n      <td>0.126</td>\n      <td>0.0</td>\n      <td>0.122</td>\n      <td>0.01</td>\n      <td>1.895</td>\n      <td>AFG</td>\n    </tr>\n  </tbody>\n</table>\n<p>1 rows × 21 columns</p>\n</div>","text/plain":"    Country name Continents  happy_score  Standard error of ladder score  \\\n148  Afghanistan       Asia        2.523                           0.038   \n\n     upperwhisker  lowerwhisker  Logged GDP per capita  Social support  \\\n148         2.596         2.449                  7.695           0.463   \n\n     Healthy life expectancy  Freedom to make life choices  ...  \\\n148                   52.493                         0.382  ...   \n\n     Perceptions of corruption  Ladder score in Dystopia  \\\n148                      0.924                      2.43   \n\n     Explained by: Log GDP per capita  Explained by: Social support  \\\n148                              0.37                           0.0   \n\n     Explained by: Healthy life expectancy  \\\n148                                  0.126   \n\n     Explained by: Freedom to make life choices  Explained by: Generosity  \\\n148                                         0.0                     0.122   \n\n     Explained by: Perceptions of corruption  Dystopia + residual  CODE  \n148                                     0.01                1.895   AFG  \n\n[1 rows x 21 columns]"},"exec_count":32}},"pos":28,"start":1658347663986,"state":"done","type":"cell"}
{"end":1658347665854,"exec_count":33,"id":"a741ae","input":"px.scatter(happy_2021_df, x = \"Social support\", y = \"happy_score\", hover_data = [\"Country name\"],color = 'Continents', size = 'Perceptions of corruption',trendline = \"ols\", trendline_scope = \"overall\", title=\"Relationship of Social Support and Happiness Index\")","kernel":"python3-ubuntu","output":{"0":{"data":{"iframe":"68c65d386ba7c37ed3cf2860d31399959a91a4e0"}}},"pos":30,"start":1658347665721,"state":"done","type":"cell"}
{"end":1658347667573,"exec_count":34,"id":"c07676","input":"px.scatter(happy_2021_df, x = 'Healthy life expectancy', y = 'happy_score', hover_data = [\"Country name\"], title = \"How Happiness Affects Life Expectancy\", size= \"Social support\", color = 'Continents', trendline = \"ols\", trendline_scope = \"overall\")","kernel":"python3-ubuntu","output":{"0":{"data":{"iframe":"4c1a6fbe099cdbda3317e62f125dcbdbb459517b"}}},"pos":32,"scrolled":false,"start":1658347667337,"state":"done","type":"cell"}
{"end":1658347668854,"exec_count":35,"id":"9a9bb0","input":"px.box(happy_2021_df, x=\"Continents\", y=\"happy_score\")","kernel":"python3-ubuntu","output":{"0":{"data":{"iframe":"782d9a1fa5e10e468b3e2b6a9cfbab46baaff064"}}},"pos":34,"start":1658347668782,"state":"done","type":"cell"}
{"end":1658347670563,"exec_count":36,"id":"d35368","input":"px.scatter(happy_2021_df, x = 'Freedom to make life choices', y = 'Perceptions of corruption', hover_data = [\"Country name\"], title = \"\", size= \"happy_score\", color = 'Continents')","kernel":"python3-ubuntu","output":{"0":{"data":{"iframe":"7607b7fd5c8fc6745924628eb3c924d01582eea4"}}},"pos":36,"scrolled":false,"start":1658347670429,"state":"done","type":"cell"}
{"end":1658347673158,"exec_count":37,"id":"1c1073","input":"population_df = pd.read_csv('data/population_by_country_2020.csv')","kernel":"python3-ubuntu","pos":38,"start":1658347673119,"state":"done","type":"cell"}
{"end":1658347673835,"exec_count":38,"id":"8e1179","input":"population_df.head()","kernel":"python3-ubuntu","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Country (or dependency)</th>\n      <th>Population (2020)</th>\n      <th>Yearly Change</th>\n      <th>Net Change</th>\n      <th>Density (P/Km²)</th>\n      <th>Land Area (Km²)</th>\n      <th>Migrants (net)</th>\n      <th>Fert. Rate</th>\n      <th>Med. Age</th>\n      <th>Urban Pop %</th>\n      <th>World Share</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>China</td>\n      <td>1440297825</td>\n      <td>0.39 %</td>\n      <td>5540090</td>\n      <td>153</td>\n      <td>9388211</td>\n      <td>-348399.0</td>\n      <td>1.7</td>\n      <td>38</td>\n      <td>61 %</td>\n      <td>18.47 %</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>India</td>\n      <td>1382345085</td>\n      <td>0.99 %</td>\n      <td>13586631</td>\n      <td>464</td>\n      <td>2973190</td>\n      <td>-532687.0</td>\n      <td>2.2</td>\n      <td>28</td>\n      <td>35 %</td>\n      <td>17.70 %</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>United States</td>\n      <td>331341050</td>\n      <td>0.59 %</td>\n      <td>1937734</td>\n      <td>36</td>\n      <td>9147420</td>\n      <td>954806.0</td>\n      <td>1.8</td>\n      <td>38</td>\n      <td>83 %</td>\n      <td>4.25 %</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Indonesia</td>\n      <td>274021604</td>\n      <td>1.07 %</td>\n      <td>2898047</td>\n      <td>151</td>\n      <td>1811570</td>\n      <td>-98955.0</td>\n      <td>2.3</td>\n      <td>30</td>\n      <td>56 %</td>\n      <td>3.51 %</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Pakistan</td>\n      <td>221612785</td>\n      <td>2.00 %</td>\n      <td>4327022</td>\n      <td>287</td>\n      <td>770880</td>\n      <td>-233379.0</td>\n      <td>3.6</td>\n      <td>23</td>\n      <td>35 %</td>\n      <td>2.83 %</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"  Country (or dependency)  Population (2020) Yearly Change  Net Change  \\\n0                   China         1440297825        0.39 %     5540090   \n1                   India         1382345085        0.99 %    13586631   \n2           United States          331341050        0.59 %     1937734   \n3               Indonesia          274021604        1.07 %     2898047   \n4                Pakistan          221612785        2.00 %     4327022   \n\n   Density (P/Km²)  Land Area (Km²)  Migrants (net) Fert. Rate Med. Age  \\\n0              153          9388211       -348399.0        1.7       38   \n1              464          2973190       -532687.0        2.2       28   \n2               36          9147420        954806.0        1.8       38   \n3              151          1811570        -98955.0        2.3       30   \n4              287           770880       -233379.0        3.6       23   \n\n  Urban Pop % World Share  \n0        61 %     18.47 %  \n1        35 %     17.70 %  \n2        83 %      4.25 %  \n3        56 %      3.51 %  \n4        35 %      2.83 %  "},"exec_count":38}},"pos":39,"start":1658347673811,"state":"done","type":"cell"}
{"end":1658347674829,"exec_count":39,"id":"e39376","input":"population_df.columns","kernel":"python3-ubuntu","output":{"0":{"data":{"text/plain":"Index(['Country (or dependency)', 'Population (2020)', 'Yearly Change',\n       'Net Change', 'Density (P/Km²)', 'Land Area (Km²)', 'Migrants (net)',\n       'Fert. Rate', 'Med. Age', 'Urban Pop %', 'World Share'],\n      dtype='object')"},"exec_count":39}},"pos":40,"start":1658347674805,"state":"done","type":"cell"}
{"end":1658347676927,"exec_count":40,"id":"fa3bbf","input":"population_df.rename(columns = {'Country (or dependency)': 'Country name'}, inplace = True)","kernel":"python3-ubuntu","pos":41,"start":1658347676902,"state":"done","type":"cell"}
{"end":1658347679619,"exec_count":41,"id":"d81080","input":"population = population_df[['Population (2020)','Country name']]","kernel":"python3-ubuntu","pos":43,"start":1658347679613,"state":"done","type":"cell"}
{"end":1658347683008,"exec_count":42,"id":"8064c2","input":"happy_2021_df = pd.merge(happy_2021_df, population, on='Country name')","kernel":"python3-ubuntu","pos":44,"start":1658347682990,"state":"done","type":"cell"}
{"end":1658347688346,"exec_count":44,"id":"629794","input":"happy_2021_df.columns","kernel":"python3-ubuntu","output":{"0":{"data":{"text/plain":"Index(['Country name', 'Continents', 'happy_score',\n       'Standard error of ladder score', 'upperwhisker', 'lowerwhisker',\n       'Logged GDP per capita', 'Social support', 'Healthy life expectancy',\n       'Freedom to make life choices', 'Generosity',\n       'Perceptions of corruption', 'Ladder score in Dystopia',\n       'Explained by: Log GDP per capita', 'Explained by: Social support',\n       'Explained by: Healthy life expectancy',\n       'Explained by: Freedom to make life choices',\n       'Explained by: Generosity', 'Explained by: Perceptions of corruption',\n       'Dystopia + residual', 'CODE', 'Population (2020)'],\n      dtype='object')"},"exec_count":44}},"pos":44.5,"start":1658347688331,"state":"done","type":"cell"}
{"end":1658347688698,"exec_count":45,"id":"a6c7bf","input":"happy_2021_df.head()","kernel":"python3-ubuntu","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Country name</th>\n      <th>Continents</th>\n      <th>happy_score</th>\n      <th>Standard error of ladder score</th>\n      <th>upperwhisker</th>\n      <th>lowerwhisker</th>\n      <th>Logged GDP per capita</th>\n      <th>Social support</th>\n      <th>Healthy life expectancy</th>\n      <th>Freedom to make life choices</th>\n      <th>...</th>\n      <th>Ladder score in Dystopia</th>\n      <th>Explained by: Log GDP per capita</th>\n      <th>Explained by: Social support</th>\n      <th>Explained by: Healthy life expectancy</th>\n      <th>Explained by: Freedom to make life choices</th>\n      <th>Explained by: Generosity</th>\n      <th>Explained by: Perceptions of corruption</th>\n      <th>Dystopia + residual</th>\n      <th>CODE</th>\n      <th>Population (2020)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Finland</td>\n      <td>Europe</td>\n      <td>7.842</td>\n      <td>0.032</td>\n      <td>7.904</td>\n      <td>7.780</td>\n      <td>10.775</td>\n      <td>0.954</td>\n      <td>72.0</td>\n      <td>0.949</td>\n      <td>...</td>\n      <td>2.43</td>\n      <td>1.446</td>\n      <td>1.106</td>\n      <td>0.741</td>\n      <td>0.691</td>\n      <td>0.124</td>\n      <td>0.481</td>\n      <td>3.253</td>\n      <td>FIN</td>\n      <td>5542237</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Denmark</td>\n      <td>Europe</td>\n      <td>7.620</td>\n      <td>0.035</td>\n      <td>7.687</td>\n      <td>7.552</td>\n      <td>10.933</td>\n      <td>0.954</td>\n      <td>72.7</td>\n      <td>0.946</td>\n      <td>...</td>\n      <td>2.43</td>\n      <td>1.502</td>\n      <td>1.108</td>\n      <td>0.763</td>\n      <td>0.686</td>\n      <td>0.208</td>\n      <td>0.485</td>\n      <td>2.868</td>\n      <td>DNK</td>\n      <td>5795780</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Switzerland</td>\n      <td>Europe</td>\n      <td>7.571</td>\n      <td>0.036</td>\n      <td>7.643</td>\n      <td>7.500</td>\n      <td>11.117</td>\n      <td>0.942</td>\n      <td>74.4</td>\n      <td>0.919</td>\n      <td>...</td>\n      <td>2.43</td>\n      <td>1.566</td>\n      <td>1.079</td>\n      <td>0.816</td>\n      <td>0.653</td>\n      <td>0.204</td>\n      <td>0.413</td>\n      <td>2.839</td>\n      <td>CHE</td>\n      <td>8665615</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Iceland</td>\n      <td>Europe</td>\n      <td>7.554</td>\n      <td>0.059</td>\n      <td>7.670</td>\n      <td>7.438</td>\n      <td>10.878</td>\n      <td>0.983</td>\n      <td>73.0</td>\n      <td>0.955</td>\n      <td>...</td>\n      <td>2.43</td>\n      <td>1.482</td>\n      <td>1.172</td>\n      <td>0.772</td>\n      <td>0.698</td>\n      <td>0.293</td>\n      <td>0.170</td>\n      <td>2.967</td>\n      <td>ISL</td>\n      <td>341628</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Netherlands</td>\n      <td>Europe</td>\n      <td>7.464</td>\n      <td>0.027</td>\n      <td>7.518</td>\n      <td>7.410</td>\n      <td>10.932</td>\n      <td>0.942</td>\n      <td>72.4</td>\n      <td>0.913</td>\n      <td>...</td>\n      <td>2.43</td>\n      <td>1.501</td>\n      <td>1.079</td>\n      <td>0.753</td>\n      <td>0.647</td>\n      <td>0.302</td>\n      <td>0.384</td>\n      <td>2.798</td>\n      <td>NLD</td>\n      <td>17141544</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 22 columns</p>\n</div>","text/plain":"  Country name Continents  happy_score  Standard error of ladder score  \\\n0      Finland     Europe        7.842                           0.032   \n1      Denmark     Europe        7.620                           0.035   \n2  Switzerland     Europe        7.571                           0.036   \n3      Iceland     Europe        7.554                           0.059   \n4  Netherlands     Europe        7.464                           0.027   \n\n   upperwhisker  lowerwhisker  Logged GDP per capita  Social support  \\\n0         7.904         7.780                 10.775           0.954   \n1         7.687         7.552                 10.933           0.954   \n2         7.643         7.500                 11.117           0.942   \n3         7.670         7.438                 10.878           0.983   \n4         7.518         7.410                 10.932           0.942   \n\n   Healthy life expectancy  Freedom to make life choices  ...  \\\n0                     72.0                         0.949  ...   \n1                     72.7                         0.946  ...   \n2                     74.4                         0.919  ...   \n3                     73.0                         0.955  ...   \n4                     72.4                         0.913  ...   \n\n   Ladder score in Dystopia  Explained by: Log GDP per capita  \\\n0                      2.43                             1.446   \n1                      2.43                             1.502   \n2                      2.43                             1.566   \n3                      2.43                             1.482   \n4                      2.43                             1.501   \n\n   Explained by: Social support  Explained by: Healthy life expectancy  \\\n0                         1.106                                  0.741   \n1                         1.108                                  0.763   \n2                         1.079                                  0.816   \n3                         1.172                                  0.772   \n4                         1.079                                  0.753   \n\n   Explained by: Freedom to make life choices  Explained by: Generosity  \\\n0                                       0.691                     0.124   \n1                                       0.686                     0.208   \n2                                       0.653                     0.204   \n3                                       0.698                     0.293   \n4                                       0.647                     0.302   \n\n   Explained by: Perceptions of corruption  Dystopia + residual  CODE  \\\n0                                    0.481                3.253   FIN   \n1                                    0.485                2.868   DNK   \n2                                    0.413                2.839   CHE   \n3                                    0.170                2.967   ISL   \n4                                    0.384                2.798   NLD   \n\n   Population (2020)  \n0            5542237  \n1            5795780  \n2            8665615  \n3             341628  \n4           17141544  \n\n[5 rows x 22 columns]"},"exec_count":45}},"pos":45,"start":1658347688665,"state":"done","type":"cell"}
{"end":1658348926734,"exec_count":71,"id":"e7fc8c","input":"px.scatter(happy_2021_df, x = 'Population (2020)', y = 'happy_score', log_x=True,hover_data = [\"Country name\"], title = \"\", color = 'Continents')","kernel":"python3-ubuntu","output":{"0":{"data":{"iframe":"3cb496c6f454a2376ce6490cb845ad474e10e995"}}},"pos":46.5,"scrolled":false,"start":1658348926575,"state":"done","type":"cell"}
{"end":1658349052029,"exec_count":74,"id":"138607","input":"px.scatter(happy_2021_df, x = 'Population (2020)', y = 'Healthy life expectancy',  color = 'Continents', size  = 'happy_score', hover_data = [\"Country name\"], log_x=True)","kernel":"python3-ubuntu","output":{"0":{"data":{"iframe":"1c5b0504c08d7f1b0cdeaff12aee6a3986d25f12"}}},"pos":50,"start":1658349051883,"state":"done","type":"cell"}
{"end":1658349245289,"exec_count":77,"id":"3225a4","input":"px.scatter(happy_2021_df, x =  \"Population (2020)\" , y = \"Explained by: Perceptions of corruption\",hover_data = [\"Country name\"],size = \"happy_score\", log_x = True, color = \"Continents\", title = \"Varitation in Corruption and Happiness Index with Population (2020)\")","kernel":"python3-ubuntu","output":{"0":{"data":{"iframe":"5f08a62a762d4b033109883503d245f2240041c0"}}},"pos":48.5,"start":1658349245136,"state":"done","type":"cell"}
{"end":1658349534565,"exec_count":82,"id":"97b9b1","input":"happy_all_df = pd.read_csv('data/world-happiness-report.csv')","kernel":"python3-ubuntu","pos":58,"start":1658349534514,"state":"done","type":"cell"}
{"end":1658349774082,"exec_count":89,"id":"dbc926","input":"happy_all_df.head()","kernel":"python3-ubuntu","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Country name</th>\n      <th>year</th>\n      <th>Life Ladder</th>\n      <th>Log GDP per capita</th>\n      <th>Social support</th>\n      <th>Healthy life expectancy at birth</th>\n      <th>Freedom to make life choices</th>\n      <th>Generosity</th>\n      <th>Perceptions of corruption</th>\n      <th>Positive affect</th>\n      <th>Negative affect</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Afghanistan</td>\n      <td>2008</td>\n      <td>3.724</td>\n      <td>7.370</td>\n      <td>0.451</td>\n      <td>50.80</td>\n      <td>0.718</td>\n      <td>0.168</td>\n      <td>0.882</td>\n      <td>0.518</td>\n      <td>0.258</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Afghanistan</td>\n      <td>2009</td>\n      <td>4.402</td>\n      <td>7.540</td>\n      <td>0.552</td>\n      <td>51.20</td>\n      <td>0.679</td>\n      <td>0.190</td>\n      <td>0.850</td>\n      <td>0.584</td>\n      <td>0.237</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Afghanistan</td>\n      <td>2010</td>\n      <td>4.758</td>\n      <td>7.647</td>\n      <td>0.539</td>\n      <td>51.60</td>\n      <td>0.600</td>\n      <td>0.121</td>\n      <td>0.707</td>\n      <td>0.618</td>\n      <td>0.275</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Afghanistan</td>\n      <td>2011</td>\n      <td>3.832</td>\n      <td>7.620</td>\n      <td>0.521</td>\n      <td>51.92</td>\n      <td>0.496</td>\n      <td>0.162</td>\n      <td>0.731</td>\n      <td>0.611</td>\n      <td>0.267</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Afghanistan</td>\n      <td>2012</td>\n      <td>3.783</td>\n      <td>7.705</td>\n      <td>0.521</td>\n      <td>52.24</td>\n      <td>0.531</td>\n      <td>0.236</td>\n      <td>0.776</td>\n      <td>0.710</td>\n      <td>0.268</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"  Country name  year  Life Ladder  Log GDP per capita  Social support  \\\n0  Afghanistan  2008        3.724               7.370           0.451   \n1  Afghanistan  2009        4.402               7.540           0.552   \n2  Afghanistan  2010        4.758               7.647           0.539   \n3  Afghanistan  2011        3.832               7.620           0.521   \n4  Afghanistan  2012        3.783               7.705           0.521   \n\n   Healthy life expectancy at birth  Freedom to make life choices  Generosity  \\\n0                             50.80                         0.718       0.168   \n1                             51.20                         0.679       0.190   \n2                             51.60                         0.600       0.121   \n3                             51.92                         0.496       0.162   \n4                             52.24                         0.531       0.236   \n\n   Perceptions of corruption  Positive affect  Negative affect  \n0                      0.882            0.518            0.258  \n1                      0.850            0.584            0.237  \n2                      0.707            0.618            0.275  \n3                      0.731            0.611            0.267  \n4                      0.776            0.710            0.268  "},"exec_count":89}},"pos":59,"start":1658349774045,"state":"done","type":"cell"}
{"end":1658349774730,"exec_count":90,"id":"5689cc","input":"happy_all_df['year'].unique()","kernel":"python3-ubuntu","output":{"0":{"data":{"text/plain":"array([2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018,\n       2019, 2007, 2020, 2006, 2005])"},"exec_count":90}},"pos":59.5,"start":1658349774725,"state":"done","type":"cell"}
{"end":1658349775814,"exec_count":91,"id":"37da7c","input":"happy_all_df.columns","kernel":"python3-ubuntu","output":{"0":{"data":{"text/plain":"Index(['Country name', 'year', 'Life Ladder', 'Log GDP per capita',\n       'Social support', 'Healthy life expectancy at birth',\n       'Freedom to make life choices', 'Generosity',\n       'Perceptions of corruption', 'Positive affect', 'Negative affect'],\n      dtype='object')"},"exec_count":91}},"pos":60,"scrolled":true,"start":1658349775797,"state":"done","type":"cell"}
{"end":1658349776693,"exec_count":92,"id":"a9f716","input":"continents = happy_2021_df[['Continents','Country name']]","kernel":"python3-ubuntu","pos":61,"start":1658349776675,"state":"done","type":"cell"}
{"end":1658349777302,"exec_count":93,"id":"327ea2","input":"happy_all_df.rename(columns={'Life Ladder': 'happy_score'}, inplace =True)","kernel":"python3-ubuntu","pos":62,"start":1658349777298,"state":"done","type":"cell"}
{"end":1658349779161,"exec_count":94,"id":"15e24b","input":"happy_all_df = pd.merge(happy_all_df, continents, on='Country name')","kernel":"python3-ubuntu","pos":63,"start":1658349779144,"state":"done","type":"cell"}
{"end":1658349779823,"exec_count":95,"id":"3631ce","input":"happy_all_df.head()","kernel":"python3-ubuntu","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Country name</th>\n      <th>year</th>\n      <th>happy_score</th>\n      <th>Log GDP per capita</th>\n      <th>Social support</th>\n      <th>Healthy life expectancy at birth</th>\n      <th>Freedom to make life choices</th>\n      <th>Generosity</th>\n      <th>Perceptions of corruption</th>\n      <th>Positive affect</th>\n      <th>Negative affect</th>\n      <th>Continents</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Afghanistan</td>\n      <td>2008</td>\n      <td>3.724</td>\n      <td>7.370</td>\n      <td>0.451</td>\n      <td>50.80</td>\n      <td>0.718</td>\n      <td>0.168</td>\n      <td>0.882</td>\n      <td>0.518</td>\n      <td>0.258</td>\n      <td>Asia</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Afghanistan</td>\n      <td>2009</td>\n      <td>4.402</td>\n      <td>7.540</td>\n      <td>0.552</td>\n      <td>51.20</td>\n      <td>0.679</td>\n      <td>0.190</td>\n      <td>0.850</td>\n      <td>0.584</td>\n      <td>0.237</td>\n      <td>Asia</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Afghanistan</td>\n      <td>2010</td>\n      <td>4.758</td>\n      <td>7.647</td>\n      <td>0.539</td>\n      <td>51.60</td>\n      <td>0.600</td>\n      <td>0.121</td>\n      <td>0.707</td>\n      <td>0.618</td>\n      <td>0.275</td>\n      <td>Asia</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Afghanistan</td>\n      <td>2011</td>\n      <td>3.832</td>\n      <td>7.620</td>\n      <td>0.521</td>\n      <td>51.92</td>\n      <td>0.496</td>\n      <td>0.162</td>\n      <td>0.731</td>\n      <td>0.611</td>\n      <td>0.267</td>\n      <td>Asia</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Afghanistan</td>\n      <td>2012</td>\n      <td>3.783</td>\n      <td>7.705</td>\n      <td>0.521</td>\n      <td>52.24</td>\n      <td>0.531</td>\n      <td>0.236</td>\n      <td>0.776</td>\n      <td>0.710</td>\n      <td>0.268</td>\n      <td>Asia</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"  Country name  year  happy_score  Log GDP per capita  Social support  \\\n0  Afghanistan  2008        3.724               7.370           0.451   \n1  Afghanistan  2009        4.402               7.540           0.552   \n2  Afghanistan  2010        4.758               7.647           0.539   \n3  Afghanistan  2011        3.832               7.620           0.521   \n4  Afghanistan  2012        3.783               7.705           0.521   \n\n   Healthy life expectancy at birth  Freedom to make life choices  Generosity  \\\n0                             50.80                         0.718       0.168   \n1                             51.20                         0.679       0.190   \n2                             51.60                         0.600       0.121   \n3                             51.92                         0.496       0.162   \n4                             52.24                         0.531       0.236   \n\n   Perceptions of corruption  Positive affect  Negative affect Continents  \n0                      0.882            0.518            0.258       Asia  \n1                      0.850            0.584            0.237       Asia  \n2                      0.707            0.618            0.275       Asia  \n3                      0.731            0.611            0.267       Asia  \n4                      0.776            0.710            0.268       Asia  "},"exec_count":95}},"pos":64,"start":1658349779793,"state":"done","type":"cell"}
{"end":1658349911385,"exec_count":100,"id":"e80b3f","input":"year_score = happy_all_df.groupby('year')[['happy_score']].mean().reset_index()","kernel":"python3-ubuntu","pos":66,"start":1658349911342,"state":"done","type":"cell"}
{"end":1658351059099,"exec_count":120,"id":"c2c55d","input":"px.line(cont_year_score,x = \"year\", y = \"happy_score\", color =  'Continents')","kernel":"python3-ubuntu","output":{"0":{"data":{"iframe":"54de251858da025fe71e0c15383fec5a4a23dad8"}}},"pos":69.75,"scrolled":true,"start":1658351058985,"state":"done","type":"cell"}
{"end":1658351122824,"exec_count":123,"id":"745a7b","input":"country_year_score = happy_all_df.groupby(['year', \"Country name\"])[['happy_score']].mean()\ncountry_year_score","kernel":"python3-ubuntu","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>happy_score</th>\n    </tr>\n    <tr>\n      <th>year</th>\n      <th>Country name</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">2005</th>\n      <th>Australia</th>\n      <td>7.341</td>\n    </tr>\n    <tr>\n      <th>Belgium</th>\n      <td>7.262</td>\n    </tr>\n    <tr>\n      <th>Brazil</th>\n      <td>6.637</td>\n    </tr>\n    <tr>\n      <th>Canada</th>\n      <td>7.418</td>\n    </tr>\n    <tr>\n      <th>Denmark</th>\n      <td>8.019</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <th>...</th>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">2020</th>\n      <th>United States</th>\n      <td>7.028</td>\n    </tr>\n    <tr>\n      <th>Uruguay</th>\n      <td>6.310</td>\n    </tr>\n    <tr>\n      <th>Venezuela</th>\n      <td>4.574</td>\n    </tr>\n    <tr>\n      <th>Zambia</th>\n      <td>4.838</td>\n    </tr>\n    <tr>\n      <th>Zimbabwe</th>\n      <td>3.160</td>\n    </tr>\n  </tbody>\n</table>\n<p>1793 rows × 1 columns</p>\n</div>","text/plain":"                    happy_score\nyear Country name              \n2005 Australia            7.341\n     Belgium              7.262\n     Brazil               6.637\n     Canada               7.418\n     Denmark              8.019\n...                         ...\n2020 United States        7.028\n     Uruguay              6.310\n     Venezuela            4.574\n     Zambia               4.838\n     Zimbabwe             3.160\n\n[1793 rows x 1 columns]"},"exec_count":123}},"pos":69.875,"start":1658351122746,"state":"done","type":"cell"}
{"end":1658351126814,"exec_count":124,"id":"60a2f3","input":"cont_year_score = happy_all_df.groupby(['Continents','year'])[['happy_score']].mean().reset_index()","kernel":"python3-ubuntu","pos":69,"start":1658351126783,"state":"done","type":"cell"}
{"end":1658352307401,"exec_count":145,"id":"c33c5f","input":"India = happy_all_df[happy_all_df[\"Country name\"] == \"India\"]\nChina = happy_all_df[happy_all_df[\"Country name\"] == \"China\"]\nUSA = happy_all_df[happy_all_df[\"Country name\"] == \"United States\"]\nCanada = happy_all_df[happy_all_df[\"Country name\"] == \"Canada\"]\nIsrael = happy_all_df[happy_all_df[\"Country name\"] == \"Israel\"]\nAustralia = happy_all_df[happy_all_df[\"Country name\"] == \"Australia\"]\nNZ = happy_all_df[happy_all_df[\"Country name\"] == \"New Zealand\"]\nFinland = happy_all_df[happy_all_df[\"Country name\"] == \"Finland\"]\nIceland = happy_all_df[happy_all_df[\"Country name\"] == \"Iceland\"]\nUruguay = happy_all_df[happy_all_df[\"Country name\"] == \"Uruguay\"]\nSaudi_Arabia = happy_all_df[happy_all_df[\"Country name\"] == \"Saudi Arabia\"]\nChile = happy_all_df[happy_all_df[\"Country name\"] == \"Chile\"]","kernel":"python3-ubuntu","pos":69.919921875,"start":1658352307380,"state":"done","type":"cell"}
{"end":1658352610915,"exec_count":159,"id":"9a4ab0","input":"top_10_final = pd.concat([India,China, USA, Canada, Israel, Australia, NZ, Finland, Iceland, Uruguay, Saudi_Arabia, Chile])","kernel":"python3-ubuntu","pos":69.9248046875,"start":1658352610903,"state":"done","type":"cell"}
{"end":1658352737126,"exec_count":161,"id":"64a595","input":"top_count_year = top_10_final.groupby(['Country name','year'])[['happy_score']].mean().reset_index()","kernel":"python3-ubuntu","pos":69.9375,"start":1658352737110,"state":"done","type":"cell"}
{"end":1658352807540,"exec_count":163,"id":"26606c","input":"top_10_final.head()","kernel":"python3-ubuntu","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Country name</th>\n      <th>year</th>\n      <th>happy_score</th>\n      <th>Log GDP per capita</th>\n      <th>Social support</th>\n      <th>Healthy life expectancy at birth</th>\n      <th>Freedom to make life choices</th>\n      <th>Generosity</th>\n      <th>Perceptions of corruption</th>\n      <th>Positive affect</th>\n      <th>Negative affect</th>\n      <th>Continents</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>671</th>\n      <td>India</td>\n      <td>2006</td>\n      <td>5.348</td>\n      <td>8.145</td>\n      <td>0.707</td>\n      <td>55.72</td>\n      <td>0.774</td>\n      <td>NaN</td>\n      <td>0.855</td>\n      <td>0.687</td>\n      <td>0.199</td>\n      <td>Asia</td>\n    </tr>\n    <tr>\n      <th>672</th>\n      <td>India</td>\n      <td>2007</td>\n      <td>5.027</td>\n      <td>8.204</td>\n      <td>0.569</td>\n      <td>56.14</td>\n      <td>0.729</td>\n      <td>-0.051</td>\n      <td>0.862</td>\n      <td>0.668</td>\n      <td>0.253</td>\n      <td>Asia</td>\n    </tr>\n    <tr>\n      <th>673</th>\n      <td>India</td>\n      <td>2008</td>\n      <td>5.146</td>\n      <td>8.220</td>\n      <td>0.684</td>\n      <td>56.56</td>\n      <td>0.756</td>\n      <td>-0.072</td>\n      <td>0.891</td>\n      <td>0.674</td>\n      <td>0.259</td>\n      <td>Asia</td>\n    </tr>\n    <tr>\n      <th>674</th>\n      <td>India</td>\n      <td>2009</td>\n      <td>4.522</td>\n      <td>8.281</td>\n      <td>0.653</td>\n      <td>56.98</td>\n      <td>0.679</td>\n      <td>-0.026</td>\n      <td>0.895</td>\n      <td>0.771</td>\n      <td>0.301</td>\n      <td>Asia</td>\n    </tr>\n    <tr>\n      <th>675</th>\n      <td>India</td>\n      <td>2010</td>\n      <td>4.989</td>\n      <td>8.349</td>\n      <td>0.605</td>\n      <td>57.40</td>\n      <td>0.783</td>\n      <td>0.058</td>\n      <td>0.863</td>\n      <td>0.697</td>\n      <td>0.267</td>\n      <td>Asia</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"    Country name  year  happy_score  Log GDP per capita  Social support  \\\n671        India  2006        5.348               8.145           0.707   \n672        India  2007        5.027               8.204           0.569   \n673        India  2008        5.146               8.220           0.684   \n674        India  2009        4.522               8.281           0.653   \n675        India  2010        4.989               8.349           0.605   \n\n     Healthy life expectancy at birth  Freedom to make life choices  \\\n671                             55.72                         0.774   \n672                             56.14                         0.729   \n673                             56.56                         0.756   \n674                             56.98                         0.679   \n675                             57.40                         0.783   \n\n     Generosity  Perceptions of corruption  Positive affect  Negative affect  \\\n671         NaN                      0.855            0.687            0.199   \n672      -0.051                      0.862            0.668            0.253   \n673      -0.072                      0.891            0.674            0.259   \n674      -0.026                      0.895            0.771            0.301   \n675       0.058                      0.863            0.697            0.267   \n\n    Continents  \n671       Asia  \n672       Asia  \n673       Asia  \n674       Asia  \n675       Asia  "},"exec_count":163}},"pos":69.92724609375,"start":1658352807502,"state":"done","type":"cell"}
{"end":1658352944330,"exec_count":164,"id":"be68ae","input":"px.pie(top_10_final, values = \"Log GDP per capita\", names = \"Country name\")","kernel":"python3-ubuntu","output":{"0":{"data":{"iframe":"25d75eecfd6ae3a3d8d1349a8d69667c1b585a9b"}}},"pos":71,"start":1658352944237,"state":"done","type":"cell"}
{"end":1658353221590,"exec_count":172,"id":"f14656","input":"figs= px.line(top_10_final,x = \"year\", y = \"Log GDP per capita\", text= \"happy_score\",color =  'Country name')\nfigs.update_traces(textposition=\"bottom right\")\nfigs.show()","kernel":"python3-ubuntu","output":{"0":{"data":{"iframe":"31cae43d3b5745368d0d882fb824bc16fe07e121"}}},"pos":72,"start":1658353221437,"state":"done","type":"cell"}
{"end":1658353224995,"exec_count":173,"id":"28425e","input":"px.pie(happy_2021_df, values = \"Logged GDP per capita\", names = \"Continents\",hover_data = [\"happy_score\"], title = 'Logged GDP score by country in 2021')","kernel":"python3-ubuntu","output":{"0":{"data":{"iframe":"cdc3fc5fc3d6a1cf8584318567baad52ac359dbe"}}},"pos":73,"start":1658353224909,"state":"done","type":"cell"}
{"end":1658353963921,"exec_count":2,"id":"c64f1c","input":"happy_2021_df = pd.read_csv('data/world-happiness-report-2021.csv')","kernel":"python3-ubuntu","pos":3,"start":1658353963907,"state":"done","type":"cell"}
{"end":1658353964265,"exec_count":3,"id":"8b8e2f","input":"happy_2021_df.head()","kernel":"python3-ubuntu","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Country name</th>\n      <th>Regional indicator</th>\n      <th>Ladder score</th>\n      <th>Standard error of ladder score</th>\n      <th>upperwhisker</th>\n      <th>lowerwhisker</th>\n      <th>Logged GDP per capita</th>\n      <th>Social support</th>\n      <th>Healthy life expectancy</th>\n      <th>Freedom to make life choices</th>\n      <th>Generosity</th>\n      <th>Perceptions of corruption</th>\n      <th>Ladder score in Dystopia</th>\n      <th>Explained by: Log GDP per capita</th>\n      <th>Explained by: Social support</th>\n      <th>Explained by: Healthy life expectancy</th>\n      <th>Explained by: Freedom to make life choices</th>\n      <th>Explained by: Generosity</th>\n      <th>Explained by: Perceptions of corruption</th>\n      <th>Dystopia + residual</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Finland</td>\n      <td>Western Europe</td>\n      <td>7.842</td>\n      <td>0.032</td>\n      <td>7.904</td>\n      <td>7.780</td>\n      <td>10.775</td>\n      <td>0.954</td>\n      <td>72.0</td>\n      <td>0.949</td>\n      <td>-0.098</td>\n      <td>0.186</td>\n      <td>2.43</td>\n      <td>1.446</td>\n      <td>1.106</td>\n      <td>0.741</td>\n      <td>0.691</td>\n      <td>0.124</td>\n      <td>0.481</td>\n      <td>3.253</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Denmark</td>\n      <td>Western Europe</td>\n      <td>7.620</td>\n      <td>0.035</td>\n      <td>7.687</td>\n      <td>7.552</td>\n      <td>10.933</td>\n      <td>0.954</td>\n      <td>72.7</td>\n      <td>0.946</td>\n      <td>0.030</td>\n      <td>0.179</td>\n      <td>2.43</td>\n      <td>1.502</td>\n      <td>1.108</td>\n      <td>0.763</td>\n      <td>0.686</td>\n      <td>0.208</td>\n      <td>0.485</td>\n      <td>2.868</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Switzerland</td>\n      <td>Western Europe</td>\n      <td>7.571</td>\n      <td>0.036</td>\n      <td>7.643</td>\n      <td>7.500</td>\n      <td>11.117</td>\n      <td>0.942</td>\n      <td>74.4</td>\n      <td>0.919</td>\n      <td>0.025</td>\n      <td>0.292</td>\n      <td>2.43</td>\n      <td>1.566</td>\n      <td>1.079</td>\n      <td>0.816</td>\n      <td>0.653</td>\n      <td>0.204</td>\n      <td>0.413</td>\n      <td>2.839</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Iceland</td>\n      <td>Western Europe</td>\n      <td>7.554</td>\n      <td>0.059</td>\n      <td>7.670</td>\n      <td>7.438</td>\n      <td>10.878</td>\n      <td>0.983</td>\n      <td>73.0</td>\n      <td>0.955</td>\n      <td>0.160</td>\n      <td>0.673</td>\n      <td>2.43</td>\n      <td>1.482</td>\n      <td>1.172</td>\n      <td>0.772</td>\n      <td>0.698</td>\n      <td>0.293</td>\n      <td>0.170</td>\n      <td>2.967</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Netherlands</td>\n      <td>Western Europe</td>\n      <td>7.464</td>\n      <td>0.027</td>\n      <td>7.518</td>\n      <td>7.410</td>\n      <td>10.932</td>\n      <td>0.942</td>\n      <td>72.4</td>\n      <td>0.913</td>\n      <td>0.175</td>\n      <td>0.338</td>\n      <td>2.43</td>\n      <td>1.501</td>\n      <td>1.079</td>\n      <td>0.753</td>\n      <td>0.647</td>\n      <td>0.302</td>\n      <td>0.384</td>\n      <td>2.798</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"  Country name Regional indicator  Ladder score  \\\n0      Finland     Western Europe         7.842   \n1      Denmark     Western Europe         7.620   \n2  Switzerland     Western Europe         7.571   \n3      Iceland     Western Europe         7.554   \n4  Netherlands     Western Europe         7.464   \n\n   Standard error of ladder score  upperwhisker  lowerwhisker  \\\n0                           0.032         7.904         7.780   \n1                           0.035         7.687         7.552   \n2                           0.036         7.643         7.500   \n3                           0.059         7.670         7.438   \n4                           0.027         7.518         7.410   \n\n   Logged GDP per capita  Social support  Healthy life expectancy  \\\n0                 10.775           0.954                     72.0   \n1                 10.933           0.954                     72.7   \n2                 11.117           0.942                     74.4   \n3                 10.878           0.983                     73.0   \n4                 10.932           0.942                     72.4   \n\n   Freedom to make life choices  Generosity  Perceptions of corruption  \\\n0                         0.949      -0.098                      0.186   \n1                         0.946       0.030                      0.179   \n2                         0.919       0.025                      0.292   \n3                         0.955       0.160                      0.673   \n4                         0.913       0.175                      0.338   \n\n   Ladder score in Dystopia  Explained by: Log GDP per capita  \\\n0                      2.43                             1.446   \n1                      2.43                             1.502   \n2                      2.43                             1.566   \n3                      2.43                             1.482   \n4                      2.43                             1.501   \n\n   Explained by: Social support  Explained by: Healthy life expectancy  \\\n0                         1.106                                  0.741   \n1                         1.108                                  0.763   \n2                         1.079                                  0.816   \n3                         1.172                                  0.772   \n4                         1.079                                  0.753   \n\n   Explained by: Freedom to make life choices  Explained by: Generosity  \\\n0                                       0.691                     0.124   \n1                                       0.686                     0.208   \n2                                       0.653                     0.204   \n3                                       0.698                     0.293   \n4                                       0.647                     0.302   \n\n   Explained by: Perceptions of corruption  Dystopia + residual  \n0                                    0.481                3.253  \n1                                    0.485                2.868  \n2                                    0.413                2.839  \n3                                    0.170                2.967  \n4                                    0.384                2.798  "},"exec_count":3}},"pos":4,"start":1658353964224,"state":"done","type":"cell"}
{"end":1658353964615,"exec_count":4,"id":"728ccf","input":"happy_2021_df.shape","kernel":"python3-ubuntu","output":{"0":{"data":{"text/plain":"(149, 20)"},"exec_count":4}},"pos":6,"start":1658353964599,"state":"done","type":"cell"}
{"end":1658353964936,"exec_count":5,"id":"dd4a55","input":"happy_2021_df.info()","kernel":"python3-ubuntu","output":{"0":{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 149 entries, 0 to 148\nData columns (total 20 columns):\n #   Column                                      Non-Null Count  Dtype  \n---  ------                                      --------------  -----  \n 0   Country name                                149 non-null    object \n 1   Regional indicator                          149 non-null    object \n 2   Ladder score                                149 non-null    float64\n 3   Standard error of ladder score              149 non-null    float64\n 4   upperwhisker                                149 non-null    float64\n 5   lowerwhisker                                149 non-null    float64\n 6   Logged GDP per capita                       149 non-null    float64\n 7   Social support                              149 non-null    float64\n 8   Healthy life expectancy                     149 non-null    float64\n 9   Freedom to make life choices                149 non-null    float64\n 10  Generosity                                  149 non-null    float64\n 11  Perceptions of corruption                   149 non-null    float64\n 12  Ladder score in Dystopia                    149 non-null    float64\n 13  Explained by: Log GDP per capita            149 non-null    float64\n 14  Explained by: Social support                149 non-null    float64\n 15  Explained by: Healthy life expectancy       149 non-null    float64\n 16  Explained by: Freedom to make life choices  149 non-null    float64\n 17  Explained by: Generosity                    149 non-null    float64\n 18  Explained by: Perceptions of corruption     149 non-null    float64\n 19  Dystopia + residual                         149 non-null    float64\ndtypes: float64(18), object(2)\nmemory usage: 23.4+ KB\n"}},"pos":7,"start":1658353964922,"state":"done","type":"cell"}
{"end":1658353965317,"exec_count":6,"id":"896b9c","input":"happy_2021_df.columns","kernel":"python3-ubuntu","output":{"0":{"data":{"text/plain":"Index(['Country name', 'Regional indicator', 'Ladder score',\n       'Standard error of ladder score', 'upperwhisker', 'lowerwhisker',\n       'Logged GDP per capita', 'Social support', 'Healthy life expectancy',\n       'Freedom to make life choices', 'Generosity',\n       'Perceptions of corruption', 'Ladder score in Dystopia',\n       'Explained by: Log GDP per capita', 'Explained by: Social support',\n       'Explained by: Healthy life expectancy',\n       'Explained by: Freedom to make life choices',\n       'Explained by: Generosity', 'Explained by: Perceptions of corruption',\n       'Dystopia + residual'],\n      dtype='object')"},"exec_count":6}},"pos":8,"start":1658353965302,"state":"done","type":"cell"}
{"end":1658353965975,"exec_count":7,"id":"116a2d","input":"columns_to_drop = ['Ladder score in Dystopia',\n       'Explained by: Log GDP per capita', 'Explained by: Social support',\n       'Explained by: Healthy life expectancy',\n       'Explained by: Freedom to make life choices',\n       'Explained by: Generosity', 'Explained by: Perceptions of corruption',\n       'Dystopia + residual','Standard error of ladder score', 'upperwhisker', 'lowerwhisker']\n\nhappy_2021_df.drop(columns_to_drop, axis = 1, inplace = True)","kernel":"python3-ubuntu","pos":8.5,"start":1658353965962,"state":"done","type":"cell"}
{"end":1658353966607,"exec_count":8,"id":"4498d2","input":"happy_2021_df.rename(columns = {'Ladder score': 'happy_score'}, inplace = True)","kernel":"python3-ubuntu","pos":9,"start":1658353966595,"state":"done","type":"cell"}
{"end":1658353967136,"exec_count":9,"id":"19c467","input":"happy_2021_df['Regional indicator'].mask(happy_2021_df['Regional indicator'] == 'Western Europe','Europe', inplace = True)\nhappy_2021_df['Regional indicator'].mask(happy_2021_df['Regional indicator'] == 'Central and Eastern Europe','Europe', inplace = True)\nhappy_2021_df['Regional indicator'].mask(happy_2021_df['Regional indicator'] == 'North America and ANZ','North America', inplace = True)\nhappy_2021_df['Regional indicator'].mask(happy_2021_df['Regional indicator'] == 'Latin America and Caribbean','South America', inplace = True)\nhappy_2021_df['Regional indicator'].mask(happy_2021_df['Regional indicator'] == 'Southeast Asia','Asia', inplace = True)\nhappy_2021_df['Regional indicator'].mask(happy_2021_df['Regional indicator'] == 'East Asia','Asia', inplace = True)\nhappy_2021_df['Regional indicator'].mask(happy_2021_df['Regional indicator'] == 'South Asia','Asia', inplace = True)\nhappy_2021_df['Regional indicator'].mask(happy_2021_df['Regional indicator'] == 'Sub-Saharan Africa','Africa', inplace = True)\nhappy_2021_df['Regional indicator'].mask(happy_2021_df['Regional indicator'] == 'Middle East and North Africa','Africa', inplace = True)","kernel":"python3-ubuntu","pos":10,"start":1658353967099,"state":"done","type":"cell"}
{"end":1658353968144,"exec_count":10,"id":"4aa4fe","input":"happy_2021_df['Regional indicator'].mask(happy_2021_df['Country name'] == 'Russia', 'Europe',inplace =True)\nhappy_2021_df['Regional indicator'].mask(happy_2021_df['Country name'] == 'Belarus', 'Europe',inplace =True)\nhappy_2021_df['Regional indicator'].mask(happy_2021_df['Country name'] == 'Azerbaijan', 'Asia',inplace =True)\nhappy_2021_df['Regional indicator'].mask(happy_2021_df['Country name'] == 'Uzbekistan', 'Asia',inplace =True)\nhappy_2021_df['Regional indicator'].mask(happy_2021_df['Country name'] == 'Kazakhstan', 'Asia',inplace =True)\nhappy_2021_df['Regional indicator'].mask(happy_2021_df['Country name'] == 'Kyrgyzstan', 'Asia',inplace =True)\nhappy_2021_df['Regional indicator'].mask(happy_2021_df['Country name'] == 'Tajikistan', 'Asia',inplace =True)\nhappy_2021_df['Regional indicator'].mask(happy_2021_df['Country name'] == 'Ukraine', 'Europe',inplace =True)\nhappy_2021_df['Regional indicator'].mask(happy_2021_df['Country name'] == 'Moldova', 'Europe',inplace =True)\nhappy_2021_df['Regional indicator'].mask(happy_2021_df['Country name'] == 'Turkmenistan', 'Asia',inplace =True)\nhappy_2021_df['Regional indicator'].mask(happy_2021_df['Country name'] == 'Armenia', 'Asia',inplace =True)\nhappy_2021_df['Regional indicator'].mask(happy_2021_df['Country name'] == 'Georgia', 'Europe',inplace =True)","kernel":"python3-ubuntu","pos":11,"start":1658353968124,"state":"done","type":"cell"}
{"end":1658353968677,"exec_count":11,"id":"aa7a23","input":"happy_2021_df['Regional indicator'].mask(happy_2021_df['Country name'] == 'Australia', 'Oceania',inplace =True)\nhappy_2021_df['Regional indicator'].mask(happy_2021_df['Country name'] == 'New Zealand', 'Oceania',inplace =True)","kernel":"python3-ubuntu","pos":12,"start":1658353968664,"state":"done","type":"cell"}
{"end":1658353969223,"exec_count":12,"id":"200f3e","input":"happy_2021_df.rename(columns = {'Regional indicator': 'Continents'}, inplace = True)","kernel":"python3-ubuntu","pos":13,"start":1658353969219,"state":"done","type":"cell"}
{"end":1658353969794,"exec_count":13,"id":"4b88bc","input":"happy_2021_df['Continents'].unique()","kernel":"python3-ubuntu","output":{"0":{"data":{"text/plain":"array(['Europe', 'Oceania', 'Africa', 'North America', 'South America',\n       'Asia'], dtype=object)"},"exec_count":13}},"pos":14,"start":1658353969779,"state":"done","type":"cell"}
{"end":1658353970543,"exec_count":14,"id":"bb60cf","input":"happy_2021_df_copy = happy_2021_df.copy()","kernel":"python3-ubuntu","pos":14.75,"start":1658353970533,"state":"done","type":"cell"}
{"end":1658353972023,"exec_count":15,"id":"3d3448","input":"corr = happy_2021_df.corr()\n\ntrace = go.Heatmap(z=corr.values,\n                  x=corr.index.values,\n                  y=corr.columns.values)\n\nfig = go.Figure()\nfig.add_trace(trace)\n\nfig.update_layout(\n    autosize=False,\n    width=700,\n    height=600,\n   )\nfig.show()","kernel":"python3-ubuntu","output":{"0":{"data":{"iframe":"7f47b544d6d2dbf3d00216cc47c8517e9680a9e6"}}},"pos":15.5,"start":1658353971869,"state":"done","type":"cell"}
{"end":1658353982270,"exec_count":17,"id":"9aa804","input":"import pycountry \ndef alpha3code(column):\n    CODE=[]\n    for country in column:\n        try:\n            code=pycountry.countries.get(name=country).alpha_3\n            CODE.append(code)\n        except:\n            CODE.append('None')\n    return CODE\n# create a column for code \nhappy_2021_df_copy['CODE']=alpha3code(happy_2021_df_copy['Country name'])\nhappy_2021_df_copy.head()","kernel":"python3-ubuntu","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Country name</th>\n      <th>Continents</th>\n      <th>happy_score</th>\n      <th>Logged GDP per capita</th>\n      <th>Social support</th>\n      <th>Healthy life expectancy</th>\n      <th>Freedom to make life choices</th>\n      <th>Generosity</th>\n      <th>Perceptions of corruption</th>\n      <th>CODE</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Finland</td>\n      <td>Europe</td>\n      <td>7.842</td>\n      <td>10.775</td>\n      <td>0.954</td>\n      <td>72.0</td>\n      <td>0.949</td>\n      <td>-0.098</td>\n      <td>0.186</td>\n      <td>FIN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Denmark</td>\n      <td>Europe</td>\n      <td>7.620</td>\n      <td>10.933</td>\n      <td>0.954</td>\n      <td>72.7</td>\n      <td>0.946</td>\n      <td>0.030</td>\n      <td>0.179</td>\n      <td>DNK</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Switzerland</td>\n      <td>Europe</td>\n      <td>7.571</td>\n      <td>11.117</td>\n      <td>0.942</td>\n      <td>74.4</td>\n      <td>0.919</td>\n      <td>0.025</td>\n      <td>0.292</td>\n      <td>CHE</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Iceland</td>\n      <td>Europe</td>\n      <td>7.554</td>\n      <td>10.878</td>\n      <td>0.983</td>\n      <td>73.0</td>\n      <td>0.955</td>\n      <td>0.160</td>\n      <td>0.673</td>\n      <td>ISL</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Netherlands</td>\n      <td>Europe</td>\n      <td>7.464</td>\n      <td>10.932</td>\n      <td>0.942</td>\n      <td>72.4</td>\n      <td>0.913</td>\n      <td>0.175</td>\n      <td>0.338</td>\n      <td>NLD</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"  Country name Continents  happy_score  Logged GDP per capita  Social support  \\\n0      Finland     Europe        7.842                 10.775           0.954   \n1      Denmark     Europe        7.620                 10.933           0.954   \n2  Switzerland     Europe        7.571                 11.117           0.942   \n3      Iceland     Europe        7.554                 10.878           0.983   \n4  Netherlands     Europe        7.464                 10.932           0.942   \n\n   Healthy life expectancy  Freedom to make life choices  Generosity  \\\n0                     72.0                         0.949      -0.098   \n1                     72.7                         0.946       0.030   \n2                     74.4                         0.919       0.025   \n3                     73.0                         0.955       0.160   \n4                     72.4                         0.913       0.175   \n\n   Perceptions of corruption CODE  \n0                      0.186  FIN  \n1                      0.179  DNK  \n2                      0.292  CHE  \n3                      0.673  ISL  \n4                      0.338  NLD  "},"exec_count":17}},"pos":15.75,"scrolled":true,"start":1658353981697,"state":"done","type":"cell"}
{"end":1658354034887,"exec_count":22,"id":"02272f","input":"# first let us merge geopandas data with our data\n# 'naturalearth_lowres' is geopandas datasets so we can use it directly\nworld = geopandas.read_file(geopandas.datasets.get_path('naturalearth_lowres'))\n# rename the columns so that we can merge with our data\nworld.columns=['pop_est', 'continent', 'name', 'CODE', 'gdp_md_est', 'geometry']\n# then merge with our data \nmerge=pd.merge(world,happy_2021_df_copy,on='CODE')\n# last thing we need to do is - merge again with our location data which contains each country’s latitude and longitude\nlocation=pd.read_csv('https://raw.githubusercontent.com/melanieshi0120/COVID-19_global_time_series_panel_data/master/data/countries_latitude_longitude.csv')\nmerge=merge.merge(location,on='name').sort_values(by='happy_score',ascending=False).reset_index()","kernel":"python3-ubuntu","pos":15.875,"start":1658354034818,"state":"done","type":"cell"}
{"end":1658354074752,"exec_count":24,"id":"6e8344","input":"import pandas as pd # data manipulation\nimport numpy as np # maths \n\nimport plotly.express as px \n# visuals\nimport plotly.graph_objects as go\nimport geopandas\nimport matplotlib.pyplot as plt","kernel":"python3-ubuntu","pos":1,"start":1658354074730,"state":"done","type":"cell"}
{"end":1658354195722,"exec_count":29,"id":"0ec216","input":"# plot confirmed cases world map \nmerge.plot(column='happy_score', scheme=\"quantiles\",\n           figsize=(25, 20),\n           legend=True,cmap='coolwarm')\nplt.title('Happiness Score in Each Country',fontsize=25)\n# add countries names and numbers \nfor i in range(0,15):\n    plt.text(float(merge.longitude[i]),float(merge.latitude[i]),\"{}\\n{}\".format(merge['Country name'][i],merge.happy_score[i]),size=10)\nplt.show()","kernel":"python3-ubuntu","output":{"0":{"data":{"image/png":"a129762c9f99170d81abbb8847081a43ff18e56d","text/plain":"<Figure size 1800x1440 with 1 Axes>"},"metadata":{"image/png":{"height":625,"width":1437},"needs_background":"light"}}},"pos":15.9375,"start":1658354194244,"state":"done","type":"cell"}
{"exec_count":107,"id":"9245ce","input":"px.line(cont_year_score,x = \"year\", y = \"happy_score\")","kernel":"python3-ubuntu","output":{"0":{"data":{"iframe":"70f4c060d3604d84acd9b5553371235dd9cd7696"}}},"pos":68,"state":"done","type":"cell"}
{"exec_count":174,"id":"13a327","input":"fig_=px.line(top_10_final,x = \"year\", y = \"happy_score\",color =  'Country name')\n#.update_traces(textposition=\"bottom right\")\n#fig_.show()","kernel":"python3-ubuntu","output":{"0":{"data":{"iframe":"91d9e912e0e51dd228512ee743a8dece867b87fa"}}},"pos":70,"state":"done","type":"cell"}
{"id":"2a8870","input":"","pos":74,"state":"done","type":"cell"}
{"id":"31cf98","input":"","pos":53,"state":"done","type":"cell"}
{"id":"36fc21","input":"","pos":56,"state":"done","type":"cell"}
{"id":"414002","input":"","pos":33,"state":"done","type":"cell"}
{"id":"4aaf14","input":"","pos":48.75,"state":"done","type":"cell"}
{"id":"562e6d","input":"","pos":35,"state":"done","type":"cell"}
{"id":"5843e2","input":"","pos":48.9375,"state":"done","type":"cell"}
{"id":"66d637","input":"","pos":51,"state":"done","type":"cell"}
{"id":"98acaa","input":"","pos":48.875,"state":"done","type":"cell"}
{"id":"b15949","input":"","pos":54,"state":"done","type":"cell"}
{"id":"c07be5","input":"","pos":55,"state":"done","type":"cell"}
{"id":"c96700","input":"","pos":52,"state":"done","type":"cell"}
{"id":0,"time":1658354275071,"type":"user"}
{"last_load":1658336772693,"type":"file"}